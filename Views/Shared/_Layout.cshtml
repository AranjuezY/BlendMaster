@using Microsoft.AspNetCore.Identity
@inject SignInManager<IdentityUser> SignInManager
@inject UserManager<IdentityUser> UserManager

@{
    var user = await UserManager.GetUserAsync(User);
    var roles = user != null ? await UserManager.GetRolesAsync(user) : null;
    var userRole = roles != null ? roles.FirstOrDefault() : null;
}

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>@ViewData["Title"] - WebApplication2</title>
    <link rel="stylesheet" href="~/lib/bootstrap/dist/css/bootstrap.min.css" />
    <link rel="stylesheet" href="~/css/site.css" asp-append-version="true" />
    <link rel="stylesheet" href="~/WebApplication2.styles.css" asp-append-version="true" />
</head>
<body>
    <header>
        <nav class="navbar navbar-expand-sm navbar-toggleable-sm navbar-light bg-white border-bottom box-shadow mb-3">
            <div class="container-fluid">
                <a class="navbar-brand" asp-area="" asp-controller="Home" asp-action="Index">BlendMaster</a>
                <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target=".navbar-collapse" aria-controls="navbarSupportedContent"
                        aria-expanded="false" aria-label="Toggle navigation">
                    <span class="navbar-toggler-icon"></span>
                </button>
                <div class="navbar-collapse collapse d-sm-inline-flex justify-content-between" id="navbar-columns">
                    <ul class="navbar-nav flex-grow-1">
                        <li class="nav-item"></li>
                    </ul>
                </div>
                <div class="navbar-collapse collapse d-sm-inline-flex flex-sm-row-reverse">
                    @if (SignInManager.IsSignedIn(User))
                    {
                        <form asp-area="" asp-controller="Account" asp-action="Logout" method="post" id="logoutForm" class="form-inline ml-auto">
                            <ul class="navbar-nav">
                                <li class="nav-item">
                                    <p class="nav-link p-1 m-1">
                                        Hello, 
                                        @(userRole == "Administrator" 
                                            ? Html.ActionLink(UserManager.GetUserName(User), "Index", "Admin", null, new { @class = "nav-link p-1 m-1 d-inline" }) 
                                            : UserManager.GetUserName(User)
                                        )!
                                    </p>
                                </li>
                                <li class="nav-item">
                                    <button type="submit" class="btn btn-link nav-link p-1 m-1">Logout</button>
                                </li>
                            </ul>
                        </form>
                    }
                    else
                    {
                        <ul class="navbar-nav ml-auto">
                            <li class="nav-item">
                                <a class="nav-link" asp-area="" asp-controller="Account" asp-action="Login">Login</a>
                            </li>
                            <li class="nav-item">
                                <a class="nav-link" asp-area="" asp-controller="Account" asp-action="Register">Register</a>
                            </li>
                        </ul>
                    }
                </div>
            </div>
        </nav>
    </header>
    <div class="container">
        <main role="main" class="pb-3">
            @RenderBody()
        </main>
    </div>

    <footer class="border-top footer text-muted">
        <div class="container">
            &copy; 2024 - BlendMaster - <a asp-area="" asp-controller="Home" asp-action="Privacy">Privacy</a>
        </div>
    </footer>
    <script src="~/lib/jquery/dist/jquery.min.js"></script>
    <script src="~/lib/bootstrap/dist/js/bootstrap.bundle.min.js"></script>
    <script src="~/js/signalr/dist/browser/signalr.js"></script>
    <script src="~/js/site.js" asp-append-version="true"></script>
    @await RenderSectionAsync("Scripts", required: false)
    @await RenderSectionAsync("Styles", required: false)

    <script>
        var userRole = '@userRole';
        if (userRole === 'Administrator') {
            var notificationConnection = new signalR.HubConnectionBuilder()
                .withUrl("/notificationHub?role=administrator")
                .build();
                
            notificationConnection.on("notify", function (message) {
                alert(message);
                window.location.href = '/Admin/OngoingOrders';
            });
            
            notificationConnection.start().then(function() {
                console.log('Connected as Administrator');
            }).catch(function(err) {
                return console.error(err.toString());
            });
        }
    </script>
</body>
</html>
